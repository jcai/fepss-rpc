// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.fepss.rpc.test;

public final class TestProto {
  private TestProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class User extends
      com.google.protobuf.GeneratedMessage {
    // Use User.newBuilder() to construct.
    private User() {}
    
    private static final User defaultInstance = new User();
    public static User getDefaultInstance() {
      return defaultInstance;
    }
    
    public User getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fepss.rpc.test.TestProto.internal_static_protobuf_socketrpc_User_descriptor;
    }
    
    @Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fepss.rpc.test.TestProto.internal_static_protobuf_socketrpc_User_fieldAccessorTable;
    }
    
    // optional string userName = 1;
    private boolean hasUserName;
    private java.lang.String userName_ = "";
    public boolean hasUserName() { return hasUserName; }
    public java.lang.String getUserName() { return userName_; }
    
    public static com.fepss.rpc.test.TestProto.User parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.fepss.rpc.test.TestProto.User parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.fepss.rpc.test.TestProto.User parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.fepss.rpc.test.TestProto.User parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.fepss.rpc.test.TestProto.User parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.fepss.rpc.test.TestProto.User parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.fepss.rpc.test.TestProto.User parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.fepss.rpc.test.TestProto.User parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return new Builder(); }
    public Builder newBuilderForType() { return new Builder(); }
    public static Builder newBuilder(com.fepss.rpc.test.TestProto.User prototype) {
      return new Builder().mergeFrom(prototype);
    }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      // Construct using com.fepss.rpc.test.TestProto.User.newBuilder()
      private Builder() {}
      
      com.fepss.rpc.test.TestProto.User result = new com.fepss.rpc.test.TestProto.User();
      
      @Override
      protected com.fepss.rpc.test.TestProto.User internalGetResult() {
        return result;
      }
      
      @Override
      public Builder clear() {
        result = new com.fepss.rpc.test.TestProto.User();
        return this;
      }
      
      @Override
      public Builder clone() {
        return new Builder().mergeFrom(result);
      }
      
      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.fepss.rpc.test.TestProto.User.getDescriptor();
      }
      
      public com.fepss.rpc.test.TestProto.User getDefaultInstanceForType() {
        return com.fepss.rpc.test.TestProto.User.getDefaultInstance();
      }
      
      public com.fepss.rpc.test.TestProto.User build() {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(
            result);
        }
        return buildPartial();
      }
      
      private com.fepss.rpc.test.TestProto.User buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.fepss.rpc.test.TestProto.User buildPartial() {
        com.fepss.rpc.test.TestProto.User returnMe = result;
        result = null;
        return returnMe;
      }
      
      
      // optional string userName = 1;
      public boolean hasUserName() {
        return result.hasUserName();
      }
      public java.lang.String getUserName() {
        return result.getUserName();
      }
      public Builder setUserName(java.lang.String value) {
        result.hasUserName = true;
        result.userName_ = value;
        return this;
      }
      public Builder clearUserName() {
        result.hasUserName = false;
        result.userName_ = "";
        return this;
      }
    }
    
    static {
      com.fepss.rpc.test.TestProto.getDescriptor();
    }
  }
  
  public static final class Result extends
      com.google.protobuf.GeneratedMessage {
    // Use Result.newBuilder() to construct.
    private Result() {}
    
    private static final Result defaultInstance = new Result();
    public static Result getDefaultInstance() {
      return defaultInstance;
    }
    
    public Result getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.fepss.rpc.test.TestProto.internal_static_protobuf_socketrpc_Result_descriptor;
    }
    
    @Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.fepss.rpc.test.TestProto.internal_static_protobuf_socketrpc_Result_fieldAccessorTable;
    }
    
    // optional string result = 1;
    private boolean hasResult;
    private java.lang.String result_ = "";
    public boolean hasResult() { return hasResult; }
    public java.lang.String getResult() { return result_; }
    
    // optional bool success = 2;
    private boolean hasSuccess;
    private boolean success_ = false;
    public boolean hasSuccess() { return hasSuccess; }
    public boolean getSuccess() { return success_; }
    
    public static com.fepss.rpc.test.TestProto.Result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.fepss.rpc.test.TestProto.Result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.fepss.rpc.test.TestProto.Result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.fepss.rpc.test.TestProto.Result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.fepss.rpc.test.TestProto.Result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.fepss.rpc.test.TestProto.Result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.fepss.rpc.test.TestProto.Result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.fepss.rpc.test.TestProto.Result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return new Builder(); }
    public Builder newBuilderForType() { return new Builder(); }
    public static Builder newBuilder(com.fepss.rpc.test.TestProto.Result prototype) {
      return new Builder().mergeFrom(prototype);
    }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      // Construct using com.fepss.rpc.test.TestProto.Result.newBuilder()
      private Builder() {}
      
      com.fepss.rpc.test.TestProto.Result result = new com.fepss.rpc.test.TestProto.Result();
      
      @Override
      protected com.fepss.rpc.test.TestProto.Result internalGetResult() {
        return result;
      }
      
      @Override
      public Builder clear() {
        result = new com.fepss.rpc.test.TestProto.Result();
        return this;
      }
      
      @Override
      public Builder clone() {
        return new Builder().mergeFrom(result);
      }
      
      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.fepss.rpc.test.TestProto.Result.getDescriptor();
      }
      
      public com.fepss.rpc.test.TestProto.Result getDefaultInstanceForType() {
        return com.fepss.rpc.test.TestProto.Result.getDefaultInstance();
      }
      
      public com.fepss.rpc.test.TestProto.Result build() {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(
            result);
        }
        return buildPartial();
      }
      
      private com.fepss.rpc.test.TestProto.Result buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.fepss.rpc.test.TestProto.Result buildPartial() {
        com.fepss.rpc.test.TestProto.Result returnMe = result;
        result = null;
        return returnMe;
      }
      
      
      // optional string result = 1;
      public boolean hasResult() {
        return result.hasResult();
      }
      public java.lang.String getResult() {
        return result.getResult();
      }
      public Builder setResult(java.lang.String value) {
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder clearResult() {
        result.hasResult = false;
        result.result_ = "";
        return this;
      }
      
      // optional bool success = 2;
      public boolean hasSuccess() {
        return result.hasSuccess();
      }
      public boolean getSuccess() {
        return result.getSuccess();
      }
      public Builder setSuccess(boolean value) {
        result.hasSuccess = true;
        result.success_ = value;
        return this;
      }
      public Builder clearSuccess() {
        result.hasSuccess = false;
        result.success_ = false;
        return this;
      }
    }
    
    static {
      com.fepss.rpc.test.TestProto.getDescriptor();
    }
  }
  
  public static abstract class TestService
      implements com.google.protobuf.Service {
    public abstract void testMethod(
        com.google.protobuf.RpcController controller,
        com.fepss.rpc.test.TestProto.User request,
        com.google.protobuf.RpcCallback<com.fepss.rpc.test.TestProto.Result> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return com.fepss.rpc.test.TestProto.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.testMethod(controller, (com.fepss.rpc.test.TestProto.User)request,
            com.google.protobuf.RpcUtil.<com.fepss.rpc.test.TestProto.Result>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.RuntimeException("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.fepss.rpc.test.TestProto.User.getDefaultInstance();
        default:
          throw new java.lang.RuntimeException("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.fepss.rpc.test.TestProto.Result.getDefaultInstance();
        default:
          throw new java.lang.RuntimeException("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends com.fepss.rpc.test.TestProto.TestService {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public void testMethod(
          com.google.protobuf.RpcController controller,
          com.fepss.rpc.test.TestProto.User request,
          com.google.protobuf.RpcCallback<com.fepss.rpc.test.TestProto.Result> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.fepss.rpc.test.TestProto.Result.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.fepss.rpc.test.TestProto.Result.class,
            com.fepss.rpc.test.TestProto.Result.getDefaultInstance()));
      }
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_socketrpc_User_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_socketrpc_User_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_socketrpc_Result_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_socketrpc_Result_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String descriptorData =
      "\n\ntest.proto\022\022protobuf.socketrpc\"\030\n\004User" +
      "\022\020\n\010userName\030\001 \001(\t\")\n\006Result\022\016\n\006result\030\001" +
      " \001(\t\022\017\n\007success\030\002 \001(\0102Q\n\013TestService\022B\n\n" +
      "TestMethod\022\030.protobuf.socketrpc.User\032\032.p" +
      "rotobuf.socketrpc.ResultB\037\n\022com.fepss.rp" +
      "c.testB\tTestProto";
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_protobuf_socketrpc_User_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_protobuf_socketrpc_User_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protobuf_socketrpc_User_descriptor,
              new java.lang.String[] { "UserName", },
              com.fepss.rpc.test.TestProto.User.class,
              com.fepss.rpc.test.TestProto.User.Builder.class);
          internal_static_protobuf_socketrpc_Result_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_protobuf_socketrpc_Result_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protobuf_socketrpc_Result_descriptor,
              new java.lang.String[] { "Result", "Success", },
              com.fepss.rpc.test.TestProto.Result.class,
              com.fepss.rpc.test.TestProto.Result.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
}
